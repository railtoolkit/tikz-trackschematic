# This is a basic workflow to help you get started with Actions

name: test

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: "checkout"
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        uses: actions/checkout@v2

      - name: "change ImageMagick policy to allow pdf->png conversion"
        run: sudo sed -i 's/^.*policy.*coder.*none.*PDF.*//' /etc/ImageMagick-6/policy.xml

      - name: "install ghostscript"
        run: sudo apt-get install -y ghostscript

      # get TeX Live installer for cachekey
      - name: "get TeX Live installer"
        id: texlive-installer
        shell: bash
        run: |
          t=$(mktemp)
          wget 'http://mirror.ctan.org/systems/texlive/tlnet/install-tl-unx.tar.gz' -qO "$t"
          echo "::set-output name=path::$t"
        
      - name: "setup TeX Live (via paolobrasolin)"
        uses: paolobrasolin/setup-texlive-action@v1
        with:
          profile-path:  ${{ github.workspace }}/.github/tex/texlive.profile.txt
          packages-path: ${{ github.workspace }}/.github/tex/packages.test.txt
          cache-key: texlive-${{ hashFiles(steps.texlive-installer.outputs.path) }}

      - name: "install tikz-trackschematic"
        run: ./dev-install.sh -b

      - name: "test tikz-trackschematic"
        run: cd test && ./testing.sh
